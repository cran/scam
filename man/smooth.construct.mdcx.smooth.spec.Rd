\name{smooth.construct.mdcx.smooth.spec}
%\Rdversion{1.0}
\alias{smooth.construct.mdcx.smooth.spec}
\alias{smooth.construct.mdcxBy.smooth.spec}
%- Also NEED an '\alias' for EACH other topic documented here.
\title{Constructor for monotone decreasing and convex P-splines in SCAMs
}
\description{This is a special method function
  for creating smooths subject to both monotone decreasing and convexity constraints which is built by 
  the \code{mgcv} constructor function for smooth terms, \code{smooth.construct}. 
  It is constructed using mixed constrained P-splines. This smooth is specified via model terms such as 
  \code{s(x,k,bs="mdcx",m=2)}, 
  where \code{k} denotes the basis dimension and \code{m+1} is the order of the B-spline basis.

\code{mdcxBy.smooth.spec} works similar to \code{mdcx.smooth.spec} but without applying an identifiability constraint ('zero intercept' constraint). \code{mdcxBy.smooth.spec} should be used when the smooth term has a numeric \code{by} variable  that takes more than one value. In such cases, the smooth terms are fully identifiable without a 'zero intercept' constraint, so they are left unconstrained. This smooth is specified as 
  \code{s(x,by=z,bs="mdcxBy")}. See an example below.

However  a factor \code{by} variable requires identifiability constraints, so \code{s(x,by=fac,bs="mdcx")} is used in this case.


}
\usage{
\method{smooth.construct}{mdcx.smooth.spec}(object, data, knots)
\method{smooth.construct}{mdcxBy.smooth.spec}(object, data, knots)
}
\arguments{
 \item{object}{A smooth specification object, generated by an \code{s} term in a GAM formula.} 

  \item{data}{A data frame or list containing the data required by this term,
     with names given by \code{object$term}. The \code{by} variable is the last element.}
 
  \item{knots}{An optional list containing the knots supplied for basis setup.  
          If it is \code{NULL} then the knot locations are generated automatically.}

}
% \details{
%%  ~~ If necessary, more details than the description above ~~
% }
\value{An object of class \code{"mdcx.smooth"}, \code{"mdcxBy.smooth"}. 
}
\references{
Pya, N. and Wood, S.N. (2015) Shape constrained additive models. Statistics and Computing, 25(3), 543-559

Pya, N. (2010) Additive models with shape constraints. PhD thesis. University of Bath. Department of Mathematical Sciences

}
\author{ 
   Natalya Pya <nat.pya@gmail.com>

}
%% ~Make other sections like Warning with \section{Warning }{....} ~

\seealso{
\code{\link{smooth.construct.mpi.smooth.spec}}, 
\code{\link{smooth.construct.mpd.smooth.spec}}, 

\code{\link{smooth.construct.cx.smooth.spec}}, 
\code{\link{smooth.construct.cv.smooth.spec}},
 
\code{\link{smooth.construct.mdcv.smooth.spec}}, 
\code{\link{smooth.construct.micx.smooth.spec}}, 

\code{\link{smooth.construct.micv.smooth.spec}}

}
\examples{
 \dontrun{
## Monotone decreasing and convex SCOP-splines example 
  ## simulating data...
   require(scam)
   set.seed(2)
   n <- 100
   x <- sort(runif(n)*3-1)
   f <- (x-3)^6/1000 # monotone decreasing and convex smooth
   y <- f+rnorm(n)*.4
   dat <- data.frame(x=x,y=y)
   ## fit model ...
   b <- scam(y~s(x,k=15,bs="mdcx"),data=dat)
   ## fit unconstrained model ...
   b1 <- scam(y~s(x,k=15,bs="ps"),data=dat)
   ## plot results ...
   plot(x,y,xlab="x",ylab="y")
   lines(x,f)           ## the true function
   lines(x,b$fitted.values,col=2)  ## mixed constrained fit 
   lines(x,b1$fitted.values,col=3) ## unconstrained fit 

 ## numeric 'by' variable example... 
 set.seed(6)
 n <- 100
 x <- sort(runif(n)*3-1)
 z <- runif(n,-2,3)
 f <- (x-3)^6/1000 
 y <- f*z + rnorm(n)*.4
 dat <- data.frame(x=x,z=z,y=y)
 b <- scam(y~s(x,k=15,by=z,bs="mdcxBy"),data=dat)
 summary(b)
 par(mfrow=c(1,2))
 plot(b,shade=TRUE)
 ## unconstrained fit...
 b1 <- scam(y~s(x,k=15,by=z),data=dat)
 plot(b1,shade=TRUE)
 summary(b1)
 }
}
% Add one or more standard keywords, see file 'KEYWORDS' in the
% R documentation directory.
\keyword{models} \keyword{regression}%-- one or more ..






